// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaCadastroDeHorasApi.Context;

#nullable disable

namespace SistemaCadastroDeHorasApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250702180926_update_table_atividades_rename_column_tipoAtividadeComplementarHoras")]
    partial class update_table_atividades_rename_column_tipoAtividadeComplementarHoras
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.AtividadeUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AtividadeUsuarios");
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.Atividades", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("TipoAtividadeId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoParticipacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("cargaHoraria")
                        .HasColumnType("integer");

                    b.Property<int>("categoriaAtividadeComplementarHoras")
                        .HasColumnType("integer");

                    b.Property<string>("cnpj")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<byte[]>("comprovante")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("dataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("isExecUfc")
                        .HasColumnType("boolean");

                    b.Property<string>("nomeArquivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("nomeInstituicao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("qtdHorasUtilizadas")
                        .HasColumnType("integer");

                    b.Property<string>("tipoArquivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("TipoAtividadeId");

                    b.HasIndex("TipoParticipacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.Tipo_Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("nome")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Atividade");
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.Tipo_Participacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("nome")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Participacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nome = 0
                        },
                        new
                        {
                            Id = 2,
                            nome = 1
                        });
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HorasTotais")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeAtividadesArtisticoCulturaisEEsportivas")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeExperienciasLigadasAFormacaoProfissional")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeIniciacaoADocenciaOuVivenciaOuExtensão")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeOutrasAtividades")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeParticipacaoOuOrganizacaoDeEventos")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeProducaoTecnicaOuCientifica")
                        .HasColumnType("integer");

                    b.Property<int>("HorasTotaisDeVivenciasDeGestao")
                        .HasColumnType("integer");

                    b.Property<int>("Matricula")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SemestreDeIngresso")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("horasRestantesDeAtividadesArtisticoCulturaisEEsportivas")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeExperienciasLigadasAFormacaoProfissional")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeIniciacaoADocenciaOuVivenciaOuExtensão")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeOutrasAtividades")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeParticipacaoOuOrganizacaoDeEventos")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeProducaoTecnicaOuCientifica")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesDeVivenciasDeGestao")
                        .HasColumnType("integer");

                    b.Property<int>("horasRestantesTotais")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.AtividadeUsuario", b =>
                {
                    b.HasOne("SistemaCadastroDeHorasApi.Models.Atividades", "Atividade")
                        .WithMany()
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaCadastroDeHorasApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaCadastroDeHorasApi.Models.Atividades", b =>
                {
                    b.HasOne("SistemaCadastroDeHorasApi.Models.Tipo_Atividade", "TipoAtividade")
                        .WithMany()
                        .HasForeignKey("TipoAtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaCadastroDeHorasApi.Models.Tipo_Participacao", "TipoParticipacao")
                        .WithMany()
                        .HasForeignKey("TipoParticipacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaCadastroDeHorasApi.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoAtividade");

                    b.Navigation("TipoParticipacao");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
